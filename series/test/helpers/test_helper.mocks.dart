// Mocks generated by Mockito 5.3.2 from annotations
// in series/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:core/core.dart' as _i7;
import 'package:core/data/datasources/series/series_local_data_source.dart' as _i13;
import 'package:core/data/datasources/series/series_remote_data_source.dart' as _i11;
import 'package:core/data/models/series/season_detail_model.dart' as _i4;
import 'package:core/data/models/series/series_detail_model.dart' as _i3;
import 'package:core/data/models/series/series_model.dart' as _i12;
import 'package:core/data/models/series/series_table.dart' as _i14;
import 'package:core/domain/entities/season_detail.dart' as _i10;
import 'package:core/domain/entities/series.dart' as _i8;
import 'package:core/domain/entities/series_detail.dart' as _i9;
import 'package:core/domain/repositories/series_repository.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeriesDetailResponse_1 extends _i1.SmartFake
    implements _i3.SeriesDetailResponse {
  _FakeSeriesDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeasonDetailResponse_2 extends _i1.SmartFake
    implements _i4.SeasonDetailResponse {
  _FakeSeasonDetailResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRepository extends _i1.Mock
    implements _i5.SeriesRepository {
  MockSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>> getNowPlayingSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlaying,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #getNowPlaying,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>> getPopularSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopular,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #getPopular,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>> getTopRatedSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRated,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #getTopRated,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>> searchSeries(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #search,
            [query],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>> getWatchlistSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #getWatchlist,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i9.SeriesDetail>> getSeriesDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetail,
          [id],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, _i9.SeriesDetail>>.value(
                _FakeEither_0<_i7.Failure, _i9.SeriesDetail>(
          this,
          Invocation.method(
            #getDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, _i9.SeriesDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>> getSeriesRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendation,
          [id],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #getRecommendation,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i10.SeasonDetail>> getSeasonDetail(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeasonDetail,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, _i10.SeasonDetail>>.value(
                _FakeEither_0<_i7.Failure, _i10.SeasonDetail>(
          this,
          Invocation.method(
            #getSeasonDetail,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, _i10.SeasonDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> saveWatchlist(
          _i9.SeriesDetail? SeriesDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [SeriesDetail],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [SeriesDetail],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> removeWatchlist(
          _i9.SeriesDetail? SeriesDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [SeriesDetail],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [SeriesDetail],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [SeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRemoteDataSource extends _i1.Mock
    implements _i11.SeriesRemoteDataSource {
  MockSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i12.SeriesModel>> getNowPlayingSeries() => (super.noSuchMethod(
        Invocation.method(
          #getNowPlaying,
          [],
        ),
        returnValue:
            _i6.Future<List<_i12.SeriesModel>>.value(<_i12.SeriesModel>[]),
      ) as _i6.Future<List<_i12.SeriesModel>>);
  @override
  _i6.Future<List<_i12.SeriesModel>> getPopularSeries() => (super.noSuchMethod(
        Invocation.method(
          #getPopular,
          [],
        ),
        returnValue:
            _i6.Future<List<_i12.SeriesModel>>.value(<_i12.SeriesModel>[]),
      ) as _i6.Future<List<_i12.SeriesModel>>);
  @override
  _i6.Future<List<_i12.SeriesModel>> getTopRatedSeries() => (super.noSuchMethod(
        Invocation.method(
          #getTopRated,
          [],
        ),
        returnValue:
            _i6.Future<List<_i12.SeriesModel>>.value(<_i12.SeriesModel>[]),
      ) as _i6.Future<List<_i12.SeriesModel>>);
  @override
  _i6.Future<List<_i12.SeriesModel>> searchSeries(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValue:
            _i6.Future<List<_i12.SeriesModel>>.value(<_i12.SeriesModel>[]),
      ) as _i6.Future<List<_i12.SeriesModel>>);
  @override
  _i6.Future<_i3.SeriesDetailResponse> getSeriesDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetail,
          [id],
        ),
        returnValue: _i6.Future<_i3.SeriesDetailResponse>.value(
            _FakeSeriesDetailResponse_1(
          this,
          Invocation.method(
            #getDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.SeriesDetailResponse>);
  @override
  _i6.Future<List<_i12.SeriesModel>> getSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendation,
          [id],
        ),
        returnValue:
            _i6.Future<List<_i12.SeriesModel>>.value(<_i12.SeriesModel>[]),
      ) as _i6.Future<List<_i12.SeriesModel>>);
  @override
  _i6.Future<_i4.SeasonDetailResponse> getSeasonDetail(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeasonDetail,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue: _i6.Future<_i4.SeasonDetailResponse>.value(
            _FakeSeasonDetailResponse_2(
          this,
          Invocation.method(
            #getSeasonDetail,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i6.Future<_i4.SeasonDetailResponse>);
}

/// A class which mocks [SeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesLocalDataSource extends _i1.Mock
    implements _i13.SeriesLocalDataSource {
  MockSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlist(_i14.SeriesTable? Series) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [Series],
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlist(_i14.SeriesTable? Series) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [Series],
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i14.SeriesTable?> getSeriesById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistById,
          [id],
        ),
        returnValue: _i6.Future<_i14.SeriesTable?>.value(),
      ) as _i6.Future<_i14.SeriesTable?>);
  @override
  _i6.Future<List<_i14.SeriesTable>> getWatchlistSeries() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [],
        ),
        returnValue:
            _i6.Future<List<_i14.SeriesTable>>.value(<_i14.SeriesTable>[]),
      ) as _i6.Future<List<_i14.SeriesTable>>);
}
